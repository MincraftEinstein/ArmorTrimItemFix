plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'fabric-loom' version '1.6-SNAPSHOT'
}

base {
    archivesName = "${mod_name}-fabric-${minecraft_version}"
}

repositories {
    maven {
        url = "https://maven.terraformersmc.com/releases/"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()

    modImplementation "net.fabricmc:fabric-loader:${fabric_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}+${minecraft_version}"
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    compileOnly project(":common")

    modImplementation("com.terraformersmc:modmenu:${modmenu_version}")
}

loom {
    accessWidenerPath.set(project(":common").file("src/main/resources/${mod_id}.accesswidener"))

    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
        datagenClient {
            inherit client
            setConfigName("Fabric Data")
            ideConfigGenerated(true)
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
            vmArg "-Dfabric-api.datagen.modid=${mod_id}"
            runDir("build/datagen")
        }
    }
}

sourceSets.main.resources { srcDirs += ["src/main/generated"] }

processResources {
    from project(":common").sourceSets.main.resources

    inputs.property("version", version)

    filesMatching("fabric.mod.json") {
        expand("version": version)
    }
}

tasks.withType(JavaCompile).configureEach {
    source(project(":common").sourceSets.main.allSource)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId base.archivesName.get()
            from components.java
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
